version: 2.1
orbs:
  node: circleci/node@3.0.1
  gcp-gke: circleci/gcp-gke@1.1.0
  gcr: circleci/gcp-gcr@0.7.1
  helm: circleci/helm@1.0.0
jobs:
  build: 
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      # Run a step to setup an environment variable
      # Redirect MY_ENV_VAR into $BASH_ENV
      - run: 
          name: "Setup custom environment variables"
          command: echo 'export MY_ENV_VAR="$(grep CLUSTER setup-env.sh | awk -F'=' '{print $2}')"' >> $BASH_ENV
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      # Run another step, the same as above; note that you can
      # invoke environment variable without curly braces.
      - run:
          name: "What branch am I on now?"
          command: echo $CIRCLE_BRANCH
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
      - run:
          name: "Print an env var stored in the Project"
          command: echo ${PROJECT_ENV_VAR}
      - run:
          name: "Print an env var stored in a Context"
          command: echo ${CONTEXT_ENV_VAR}
  test:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      - checkout # check out the code in the project directory
      - save_cache:
          key: asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.HELLO }}
          paths:
            - ./setup-env.sh
      - run:
          name: test
          command: |
            export A="$(grep X setup-env.sh | awk -F'=' '{print $2}')" >> $BASH_ENV
            echo "This is pipeline ID($A)($HELLO)xxxxxx"
      - run:
          name: aa
          command: |
            echo "This is pipeline ID($A)($X)xxxxxx"

  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      - checkout
      - gcr/gcr-auth
      - gcp-gke/install
      - gcp-gke/rollout-image:
          cluster: "$(grep CLUSTER setup-env.sh | awk -F'=' '{print $2}')"
          container: health-care-server
          deployment: health-care-server
          image: gcr.io/project-1-284510/health-care-server
          tag: 3464546d9baab6798cdfd1bef1d256f4b68c6bd7
workflows:
  main:
    jobs:
      - build
      - test
      # - deploy